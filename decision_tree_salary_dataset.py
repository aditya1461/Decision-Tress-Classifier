# -*- coding: utf-8 -*-
"""decision_tree Salary Dataset.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1vq4fOHp0mcNMrF1eFnGizgd3bMMzKU5n

<h2 style='color:blue' align="center">Decision Tree Classification</h2>
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

path = '/content/salaries.csv'
df = pd.read_csv(path)
df

df.sample(5)

inputs = df.drop('salary_more_then_100k',axis='columns')
target = df['salary_more_then_100k']
inputs
target

from sklearn.preprocessing import LabelEncoder
le_company = LabelEncoder()
le_job = LabelEncoder()
le_degree = LabelEncoder()
le_company
le_job
le_degree

inputs['company_n'] = le_company.fit_transform(inputs['company'])
inputs['job_n'] = le_job.fit_transform(inputs['job'])
inputs['degree_n'] = le_degree.fit_transform(inputs['degree'])
inputs['company_n']
inputs['job_n']
inputs['degree_n']

inputs

inputs_n = inputs.drop(['company','job','degree'],axis='columns')
inputs_n

target

from sklearn import tree
model = tree.DecisionTreeClassifier()
model.fit(inputs_n, target)

model.score(inputs_n,target)

"""**Is salary of Google, Computer Engineer, Bachelors degree > 100 k ?**"""

model.predict([[2,1,0]])

"""**Is salary of Google, Computer Engineer, Masters degree > 100 k ?**"""

model.predict([[2,1,1]])

"""**Exercise: Build decision tree model to predict survival based on certain parameters**

<img src="titanic.jpg" height=200 width=400/>

CSV file is available to download at https://github.com/codebasics/py/blob/master/ML/9_decision_tree/Exercise/titanic.csv

##### In this file using following columns build a model to predict if person would survive or not,

1. Pclass
1. Sex
1. Age
1. Fare

##### Calculate score of your model
"""